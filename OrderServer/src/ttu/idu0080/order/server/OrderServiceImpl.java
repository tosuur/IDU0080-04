
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package ttu.idu0080.order.server;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.10 2017-05-15T23:51:34.717+03:00
 * Generated source version: 3.1.10
 * 
 */

@javax.jws.WebService(serviceName = "OrderServiceService", portName = "OrderServicePort", targetNamespace = "http://server.order.idu0080.ttu/", wsdlLocation = "file:/C:/Users/Tony Bigwell/workspace/ProductServer/WebContent/orders.wsdl", endpointInterface = "ttu.idu0080.order.server.OrderService")

public class OrderServiceImpl implements OrderService {

	private static final Logger LOG = Logger.getLogger(OrderServiceImpl.class.getName());

	/*
	 * (non-Javadoc)
	 * 
	 * @see ttu.idu0080.order.server.OrderService#getOrdersByCustomerId(int
	 * customerId)*
	 */
	public java.util.List<ttu.idu0080.order.server.Order> getOrdersByCustomerId(int customerId) {
		LOG.info("Executing operation getOrdersByCustomerId");
		System.out.println(customerId);
		try {
			java.util.List<ttu.idu0080.order.server.Order> _return = new java.util.ArrayList<ttu.idu0080.order.server.Order>();
			ttu.idu0080.order.server.Order _returnVal1 = new ttu.idu0080.order.server.Order();
			ttu.idu0080.order.server.Customer _returnVal1Customer = new ttu.idu0080.order.server.Customer();
			java.util.List<ttu.idu0080.order.server.Address> _returnVal1CustomerAddresses = new java.util.ArrayList<ttu.idu0080.order.server.Address>();
			_returnVal1Customer.getAddresses().addAll(_returnVal1CustomerAddresses);
			_returnVal1Customer.setCustomer(-1252733793);
			_returnVal1Customer.setFirstName("FirstName-933073242");
			_returnVal1Customer.setLastName("LastName-1020924624");
			_returnVal1.setCustomer(_returnVal1Customer);
			_returnVal1.setOrderId(-342559872);
			java.util.List<ttu.idu0080.order.server.OrderProduct> _returnVal1OrderProducts = new java.util.ArrayList<ttu.idu0080.order.server.OrderProduct>();
			ttu.idu0080.order.server.OrderProduct _returnVal1OrderProductsVal1 = new ttu.idu0080.order.server.OrderProduct();
			_returnVal1OrderProductsVal1.setOrderProduct(-1164248652);
			_returnVal1OrderProductsVal1.setPrice(0.5631831f);
			_returnVal1OrderProductsVal1.setPriceTotal(0.50970405f);
			_returnVal1OrderProductsVal1.setProductCount(391493177);
			_returnVal1OrderProductsVal1.setProductName("ProductName243516480");
			_returnVal1OrderProducts.add(_returnVal1OrderProductsVal1);
			_returnVal1.getOrderProducts().addAll(_returnVal1OrderProducts);
			_returnVal1.setPriceTotal(0.39892882f);
			ttu.idu0080.order.server.Seller _returnVal1Seller = new ttu.idu0080.order.server.Seller();
			java.util.List<ttu.idu0080.order.server.EntAddress> _returnVal1SellerAddresses = new java.util.ArrayList<ttu.idu0080.order.server.EntAddress>();
			_returnVal1Seller.getAddresses().addAll(_returnVal1SellerAddresses);
			_returnVal1Seller.setEnterprise(1152454588);
			_returnVal1Seller.setName("Name1466490870");
			_returnVal1.setSeller(_returnVal1Seller);
			ttu.idu0080.order.server.Address _returnVal1ShippingAddress = new ttu.idu0080.order.server.Address();
			_returnVal1ShippingAddress.setAddress(726802688);
			_returnVal1ShippingAddress.setCountry("Country1063762140");
			_returnVal1ShippingAddress.setCounty("County-1739553832");
			_returnVal1ShippingAddress.setStreetAddress("StreetAddress-2126133881");
			_returnVal1ShippingAddress.setTownVillage("TownVillage-1444284371");
			_returnVal1ShippingAddress.setZipcode("Zipcode1856558498");
			_returnVal1.setShippingAddress(_returnVal1ShippingAddress);
			_return.add(_returnVal1);
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see ttu.idu0080.order.server.OrderService#getAllOrders()*
	 */
	public java.util.List<ttu.idu0080.order.server.Order> getAllOrders() {
		LOG.info("Executing operation getAllOrders");
		try {
			Class.forName("org.postgresql.Driver");
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		Connection connection = null;
		try {
			connection = DriverManager.getConnection("jdbc:postgresql://localhost:5432/myDB", "postgres", "");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		if (connection != null) {
			System.out.println("You made it, take control your database now!");
			try {
				PreparedStatement st = connection.prepareStatement(
						"SELECT ord.eshop_order, cust.customer, cust.first_name, cust.last_name,  pro.order_product, pro.price, pro.price_total, pro.product_count, pro.product_name, enterprise.enterprise, enterprise.name, address.address, address.country, address.county, address.street_address, address.town_village, address.zipcode FROM eshop_order ord, customer cust, order_product pro, enterprise, address WHERE  cust.customer=ord.customer_fk AND pro.eshop_order_fk=ord.eshop_order AND enterprise.enterprise=ord.seller_fk AND ord.shipping_address_fk=address.address ORDER BY ord.eshop_order",
						ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
				ResultSet rs = st.executeQuery();
				java.util.List<ttu.idu0080.order.server.Order> _return = new java.util.ArrayList<ttu.idu0080.order.server.Order>();
				int j = 1;
				for (int i = 1; rs.absolute(i); i = j) {

					try {
						int orderID = rs.getInt(1);
						ttu.idu0080.order.server.Order _returnVal1 = new ttu.idu0080.order.server.Order();
						ttu.idu0080.order.server.Customer _returnVal1Customer = new ttu.idu0080.order.server.Customer();
						java.util.List<ttu.idu0080.order.server.Address> _returnVal1CustomerAddresses = new java.util.ArrayList<ttu.idu0080.order.server.Address>();
						_returnVal1Customer.getAddresses().addAll(_returnVal1CustomerAddresses);
						_returnVal1Customer.setCustomer(rs.getInt(2));
						_returnVal1Customer.setFirstName(rs.getString(3));
						_returnVal1Customer.setLastName(rs.getString(4));
						_returnVal1.setCustomer(_returnVal1Customer);
						_returnVal1.setOrderId(rs.getInt(1));
						java.util.List<ttu.idu0080.order.server.OrderProduct> _returnVal1OrderProducts = new java.util.ArrayList<ttu.idu0080.order.server.OrderProduct>();
						ttu.idu0080.order.server.OrderProduct _returnVal1OrderProductsVal1 = new ttu.idu0080.order.server.OrderProduct();
						// Product p = new Product(rs.getInt(5), rs.getInt(6),
						// rs.getInt(7), rs.getInt(8), rs.getString(9));
						_returnVal1OrderProductsVal1.setOrderProduct(rs.getInt(5));
						_returnVal1OrderProductsVal1.setPrice(rs.getInt(6));
						_returnVal1OrderProductsVal1.setPriceTotal(rs.getInt(7));
						_returnVal1OrderProductsVal1.setProductCount(rs.getInt(8));
						_returnVal1OrderProductsVal1.setProductName(rs.getString(9));
						_returnVal1OrderProducts.add(_returnVal1OrderProductsVal1);
						j++;
						while (rs.next()) {
							if (rs.getInt(1) == orderID) {
								j++;
								ttu.idu0080.order.server.OrderProduct _returnVal1OrderProductsVal = new ttu.idu0080.order.server.OrderProduct();
								_returnVal1OrderProductsVal.setOrderProduct(rs.getInt(5));
								_returnVal1OrderProductsVal.setPrice(rs.getInt(6));
								_returnVal1OrderProductsVal.setPriceTotal(rs.getInt(7));
								_returnVal1OrderProductsVal.setProductCount(rs.getInt(8));
								_returnVal1OrderProductsVal.setProductName(rs.getString(9));
								_returnVal1OrderProducts.add(_returnVal1OrderProductsVal);
							} else {
								break;
							}
						}
						rs.absolute(i);

						_returnVal1.getOrderProducts().addAll(_returnVal1OrderProducts);
						_returnVal1.setPriceTotal(0.94848174f);
						ttu.idu0080.order.server.Seller _returnVal1Seller = new ttu.idu0080.order.server.Seller();
						java.util.List<ttu.idu0080.order.server.EntAddress> _returnVal1SellerAddresses = new java.util.ArrayList<ttu.idu0080.order.server.EntAddress>();
						_returnVal1Seller.getAddresses().addAll(_returnVal1SellerAddresses);
						_returnVal1Seller.setEnterprise(rs.getInt(10));
						_returnVal1Seller.setName(rs.getString(11));
						_returnVal1.setSeller(_returnVal1Seller);
						ttu.idu0080.order.server.Address _returnVal1ShippingAddress = new ttu.idu0080.order.server.Address();
						_returnVal1ShippingAddress.setAddress(rs.getInt(12));
						_returnVal1ShippingAddress.setCountry(rs.getString(13));
						_returnVal1ShippingAddress.setCounty(rs.getString(14));
						_returnVal1ShippingAddress.setStreetAddress(rs.getString(15));
						_returnVal1ShippingAddress.setTownVillage(rs.getString(16));
						_returnVal1ShippingAddress.setZipcode(rs.getString(17));
						_returnVal1.setShippingAddress(_returnVal1ShippingAddress);
						_return.add(_returnVal1);

					} catch (java.lang.Exception ex) {
						ex.printStackTrace();
						throw new RuntimeException(ex);
					}
					// System.out.print("Column 1 returned ");
					// System.out.println(rs.getString(3));
				}

				return _return;

			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		} else {
			System.out.println("Failed to make connection!");
		}
		try {
			connection.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;

	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see ttu.idu0080.order.server.OrderService#getOrdersByOrderId(int
	 * orderId)*
	 */
	public ttu.idu0080.order.server.Order getOrdersByOrderId(int orderId) {
		LOG.info("Executing operation getOrdersByOrderId");
		System.out.println(orderId);
		try {
			Class.forName("org.postgresql.Driver");
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		Connection connection = null;
		try {
			connection = DriverManager.getConnection("jdbc:postgresql://localhost:5432/myDB", "postgres", "");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		if (connection != null) {
			System.out.println("You made it, take control your database now!");
			try {
				PreparedStatement st = connection.prepareStatement(
						"SELECT DISTINCT ON (pro.order_product) eord.eshop_order, cust.customer, cust.first_name, cust.last_name, addr.address AS client_address, addr.country AS client_country, addr.county AS client_county, addr.street_address AS client_street_address, addr.town_village AS client_town_village, addr.zipcode AS client_zipcode, pro.order_product, pro.price, pro.price_total, pro.product_count, pro.product_name, seller.enterprise, seller.name, eaddr.ent_address AS eaddr_ent_address, eaddr.country AS eaddr_country, eaddr.county AS eaddr_county, eaddr.street_address AS eaddr_street_address, eaddr.town_village AS eaddr_town_village, eaddr.zipcode AS eaddr_zipcode, addr2.address AS shipping_address, addr2.country AS shipping_country, addr2.county AS shipping_county, addr2.street_address AS shipping_street_address, addr2.town_village AS shipping_town_village, addr2.zipcode AS shipping_zipcode FROM eshop_order eord, customer cust, address addr, order_product pro, enterprise seller, ent_address eaddr, address addr2 WHERE cust.customer=eord.customer_fk AND cust.customer=addr.subject_fk AND pro.eshop_order_fk=eord.eshop_order AND eord.seller_fk=seller.enterprise AND seller.enterprise=eaddr.subject_fk AND eord.shipping_address_fk=addr2.address AND eord.eshop_order="+Integer.toString(orderId));
				ResultSet rs = st.executeQuery();
				ttu.idu0080.order.server.Order _return = new ttu.idu0080.order.server.Order();
				int total_price=0;
				while (rs.next()) {
					try {
						ttu.idu0080.order.server.Customer _returnCustomer = new ttu.idu0080.order.server.Customer();
						java.util.List<ttu.idu0080.order.server.Address> _returnCustomerAddresses = new java.util.ArrayList<ttu.idu0080.order.server.Address>();
						ttu.idu0080.order.server.Address _returnCustomerAddressesVal1 = new ttu.idu0080.order.server.Address();
						_returnCustomerAddressesVal1.setAddress(rs.getInt(5));
						_returnCustomerAddressesVal1.setCountry(rs.getString(6));
						_returnCustomerAddressesVal1.setCounty(rs.getString(7));
						_returnCustomerAddressesVal1.setStreetAddress(rs.getString(8));
						_returnCustomerAddressesVal1.setTownVillage(rs.getString(9));
						_returnCustomerAddressesVal1.setZipcode(rs.getString(10));
						_returnCustomerAddresses.add(_returnCustomerAddressesVal1);
						_returnCustomer.getAddresses().addAll(_returnCustomerAddresses);
						_returnCustomer.setCustomer(rs.getInt(2));
						_returnCustomer.setFirstName(rs.getString(3));
						_returnCustomer.setLastName(rs.getString(4));
						_return.setCustomer(_returnCustomer);
						_return.setOrderId(rs.getInt(1));
						java.util.List<ttu.idu0080.order.server.OrderProduct> _returnOrderProducts = new java.util.ArrayList<ttu.idu0080.order.server.OrderProduct>();
						ttu.idu0080.order.server.OrderProduct _returnOrderProductsVal1 = new ttu.idu0080.order.server.OrderProduct();
						_returnOrderProductsVal1.setOrderProduct(rs.getInt(11));
						_returnOrderProductsVal1.setPrice(rs.getInt(12));
						_returnOrderProductsVal1.setPriceTotal(rs.getInt(13));
						total_price+=rs.getInt(13);
						_returnOrderProductsVal1.setProductCount(rs.getInt(14));
						_returnOrderProductsVal1.setProductName(rs.getString(15));
						_returnOrderProducts.add(_returnOrderProductsVal1);
						_return.getOrderProducts().addAll(_returnOrderProducts);
						_return.setPriceTotal(total_price);
						ttu.idu0080.order.server.Seller _returnSeller = new ttu.idu0080.order.server.Seller();
						java.util.List<ttu.idu0080.order.server.EntAddress> _returnSellerAddresses = new java.util.ArrayList<ttu.idu0080.order.server.EntAddress>();
						ttu.idu0080.order.server.EntAddress _returnSellerAddressesVal1 = new ttu.idu0080.order.server.EntAddress();
						_returnSellerAddressesVal1.setAddress(rs.getInt(18));
						_returnSellerAddressesVal1.setCountry(rs.getString(19));
						_returnSellerAddressesVal1.setCounty(rs.getString(20));
						_returnSellerAddressesVal1.setStreetAddress(rs.getString(21));
						_returnSellerAddressesVal1.setTownVillage(rs.getString(22));
						_returnSellerAddressesVal1.setZipcode(rs.getString(23));
						_returnSellerAddresses.add(_returnSellerAddressesVal1);
						_returnSeller.getAddresses().addAll(_returnSellerAddresses);
						_returnSeller.setEnterprise(rs.getInt(16));
						_returnSeller.setName(rs.getString(17));
						_return.setSeller(_returnSeller);
						ttu.idu0080.order.server.Address _returnShippingAddress = new ttu.idu0080.order.server.Address();
						_returnShippingAddress.setAddress(rs.getInt(24));
						_returnShippingAddress.setCountry(rs.getString(25));
						_returnShippingAddress.setCounty(rs.getString(26));
						_returnShippingAddress.setStreetAddress(rs.getString(27));
						_returnShippingAddress.setTownVillage(rs.getString(28));
						_returnShippingAddress.setZipcode(rs.getString(29));
						_return.setShippingAddress(_returnShippingAddress);

					} catch (java.lang.Exception ex) {
						ex.printStackTrace();
						throw new RuntimeException(ex);
					}
				}
				return _return;

			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		} else {
			System.out.println("Failed to make connection!");
		}
		try {
			connection.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * ttu.idu0080.order.server.OrderService#getOrdersByShippingAddress(java.
	 * lang.String country, java.lang.String county)*
	 */
	public java.util.List<ttu.idu0080.order.server.Order> getOrdersByShippingAddress(java.lang.String country,
			java.lang.String county) {
		LOG.info("Executing operation getOrdersByShippingAddress");
		System.out.println(country);
		System.out.println(county);
		try {
			java.util.List<ttu.idu0080.order.server.Order> _return = new java.util.ArrayList<ttu.idu0080.order.server.Order>();
			ttu.idu0080.order.server.Order _returnVal1 = new ttu.idu0080.order.server.Order();
			ttu.idu0080.order.server.Customer _returnVal1Customer = new ttu.idu0080.order.server.Customer();
			java.util.List<ttu.idu0080.order.server.Address> _returnVal1CustomerAddresses = new java.util.ArrayList<ttu.idu0080.order.server.Address>();
			_returnVal1Customer.getAddresses().addAll(_returnVal1CustomerAddresses);
			_returnVal1Customer.setCustomer(-1281629082);
			_returnVal1Customer.setFirstName("FirstName-1686319996");
			_returnVal1Customer.setLastName("LastName509858337");
			_returnVal1.setCustomer(_returnVal1Customer);
			_returnVal1.setOrderId(-740661407);
			java.util.List<ttu.idu0080.order.server.OrderProduct> _returnVal1OrderProducts = new java.util.ArrayList<ttu.idu0080.order.server.OrderProduct>();
			ttu.idu0080.order.server.OrderProduct _returnVal1OrderProductsVal1 = new ttu.idu0080.order.server.OrderProduct();
			_returnVal1OrderProductsVal1.setOrderProduct(80943132);
			_returnVal1OrderProductsVal1.setPrice(0.90169984f);
			_returnVal1OrderProductsVal1.setPriceTotal(0.31967294f);
			_returnVal1OrderProductsVal1.setProductCount(1424516602);
			_returnVal1OrderProductsVal1.setProductName("ProductName70622186");
			_returnVal1OrderProducts.add(_returnVal1OrderProductsVal1);
			_returnVal1.getOrderProducts().addAll(_returnVal1OrderProducts);
			_returnVal1.setPriceTotal(0.9316088f);
			ttu.idu0080.order.server.Seller _returnVal1Seller = new ttu.idu0080.order.server.Seller();
			java.util.List<ttu.idu0080.order.server.EntAddress> _returnVal1SellerAddresses = new java.util.ArrayList<ttu.idu0080.order.server.EntAddress>();
			_returnVal1Seller.getAddresses().addAll(_returnVal1SellerAddresses);
			_returnVal1Seller.setEnterprise(-161825212);
			_returnVal1Seller.setName("Name1669693962");
			_returnVal1.setSeller(_returnVal1Seller);
			ttu.idu0080.order.server.Address _returnVal1ShippingAddress = new ttu.idu0080.order.server.Address();
			_returnVal1ShippingAddress.setAddress(-961887041);
			_returnVal1ShippingAddress.setCountry("Country630999372");
			_returnVal1ShippingAddress.setCounty("County-1234800439");
			_returnVal1ShippingAddress.setStreetAddress("StreetAddress-1391686330");
			_returnVal1ShippingAddress.setTownVillage("TownVillage745433453");
			_returnVal1ShippingAddress.setZipcode("Zipcode1827761426");
			_returnVal1.setShippingAddress(_returnVal1ShippingAddress);
			_return.add(_returnVal1);
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * ttu.idu0080.order.server.OrderService#getOrdersByCustomerLastName(java.
	 * lang.String lastName)*
	 */
	public java.util.List<ttu.idu0080.order.server.Order> getOrdersByCustomerLastName(java.lang.String lastName) {
		LOG.info("Executing operation getOrdersByCustomerLastName");
		System.out.println(lastName);
		try {
			java.util.List<ttu.idu0080.order.server.Order> _return = new java.util.ArrayList<ttu.idu0080.order.server.Order>();
			ttu.idu0080.order.server.Order _returnVal1 = new ttu.idu0080.order.server.Order();
			ttu.idu0080.order.server.Customer _returnVal1Customer = new ttu.idu0080.order.server.Customer();
			java.util.List<ttu.idu0080.order.server.Address> _returnVal1CustomerAddresses = new java.util.ArrayList<ttu.idu0080.order.server.Address>();
			_returnVal1Customer.getAddresses().addAll(_returnVal1CustomerAddresses);
			_returnVal1Customer.setCustomer(566363657);
			_returnVal1Customer.setFirstName("FirstName-348819262");
			_returnVal1Customer.setLastName("LastName528987312");
			_returnVal1.setCustomer(_returnVal1Customer);
			_returnVal1.setOrderId(2144222489);
			java.util.List<ttu.idu0080.order.server.OrderProduct> _returnVal1OrderProducts = new java.util.ArrayList<ttu.idu0080.order.server.OrderProduct>();
			ttu.idu0080.order.server.OrderProduct _returnVal1OrderProductsVal1 = new ttu.idu0080.order.server.OrderProduct();
			_returnVal1OrderProductsVal1.setOrderProduct(-2114268447);
			_returnVal1OrderProductsVal1.setPrice(0.18375736f);
			_returnVal1OrderProductsVal1.setPriceTotal(0.77460593f);
			_returnVal1OrderProductsVal1.setProductCount(701173488);
			_returnVal1OrderProductsVal1.setProductName("ProductName-568751405");
			_returnVal1OrderProducts.add(_returnVal1OrderProductsVal1);
			_returnVal1.getOrderProducts().addAll(_returnVal1OrderProducts);
			_returnVal1.setPriceTotal(0.73014253f);
			ttu.idu0080.order.server.Seller _returnVal1Seller = new ttu.idu0080.order.server.Seller();
			java.util.List<ttu.idu0080.order.server.EntAddress> _returnVal1SellerAddresses = new java.util.ArrayList<ttu.idu0080.order.server.EntAddress>();
			_returnVal1Seller.getAddresses().addAll(_returnVal1SellerAddresses);
			_returnVal1Seller.setEnterprise(867648321);
			_returnVal1Seller.setName("Name317713588");
			_returnVal1.setSeller(_returnVal1Seller);
			ttu.idu0080.order.server.Address _returnVal1ShippingAddress = new ttu.idu0080.order.server.Address();
			_returnVal1ShippingAddress.setAddress(-422912979);
			_returnVal1ShippingAddress.setCountry("Country894031965");
			_returnVal1ShippingAddress.setCounty("County-1213741774");
			_returnVal1ShippingAddress.setStreetAddress("StreetAddress2103347837");
			_returnVal1ShippingAddress.setTownVillage("TownVillage1228089963");
			_returnVal1ShippingAddress.setZipcode("Zipcode-1300247939");
			_returnVal1.setShippingAddress(_returnVal1ShippingAddress);
			_return.add(_returnVal1);
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

}
