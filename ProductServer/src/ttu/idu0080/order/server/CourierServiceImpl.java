
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package ttu.idu0080.order.server;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.10
 * 2017-05-15T23:54:27.155+03:00
 * Generated source version: 3.1.10
 * 
 */

@javax.jws.WebService(
                      serviceName = "CourierServiceService",
                      portName = "CourierServicePort",
                      targetNamespace = "http://server.order.idu0080.ttu/",
                      wsdlLocation = "file:/C:/Users/Tony Bigwell/workspace/ProductServer/WebContent/couriers_1.wsdl",
                      endpointInterface = "ttu.idu0080.order.server.CourierService")
                      
public class CourierServiceImpl implements CourierService {

    private static final Logger LOG = Logger.getLogger(CourierServiceImpl.class.getName());

    /* (non-Javadoc)
     * @see ttu.idu0080.order.server.CourierService#getCouriersByAddress(java.lang.String country, java.lang.String county)*
     */
    public java.util.List<ttu.idu0080.order.server.Courier> getCouriersByAddress(java.lang.String country, java.lang.String county) { 
        LOG.info("Executing operation getCouriersByAddress");
        System.out.println(country);
        System.out.println(county);
        try {
            java.util.List<ttu.idu0080.order.server.Courier> _return = new java.util.ArrayList<ttu.idu0080.order.server.Courier>();
            ttu.idu0080.order.server.Courier _returnVal1 = new ttu.idu0080.order.server.Courier();
            java.util.List<ttu.idu0080.order.server.EntAddress> _returnVal1Addresses = new java.util.ArrayList<ttu.idu0080.order.server.EntAddress>();
            ttu.idu0080.order.server.EntAddress _returnVal1AddressesVal1 = new ttu.idu0080.order.server.EntAddress();
            _returnVal1AddressesVal1.setAddress(-1327581535);
            _returnVal1AddressesVal1.setCountry("Country-654087018");
            _returnVal1AddressesVal1.setCounty("County1009061852");
            _returnVal1AddressesVal1.setStreetAddress("StreetAddress-507217830");
            _returnVal1AddressesVal1.setTownVillage("TownVillage127120524");
            _returnVal1AddressesVal1.setZipcode("Zipcode-1755018712");
            _returnVal1Addresses.add(_returnVal1AddressesVal1);
            _returnVal1.getAddresses().addAll(_returnVal1Addresses);
            _returnVal1.setEnterprise(895535115);
            _returnVal1.setName("Name1866154299");
            _returnVal1.setPercentFromOrder(-1446882596);
            _return.add(_returnVal1);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ttu.idu0080.order.server.CourierService#getCourierById(int courierId)*
     */
    public ttu.idu0080.order.server.Courier getCourierById(int courierId) { 
        LOG.info("Executing operation getCourierById");
        try {
			Class.forName("org.postgresql.Driver");
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		Connection connection = null;
		try {
			connection = DriverManager.getConnection("jdbc:postgresql://localhost:5432/myDB", "postgres", "");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		if (connection != null) {
			System.out.println("You made it, take control your database now!");
			try {
				PreparedStatement st = connection.prepareStatement(
						"SELECT eaddr.ent_address, eaddr.country, eaddr.county, eaddr.street_address, eaddr.town_village,eaddr.zipcode, ent.enterprise, ent.name, ent.percent_from_order FROM ent_address eaddr, enterprise ent WHERE ent.enterprise=eaddr.subject_fk AND ent.enterprise ="+Integer.toString(courierId));
				ResultSet rs = st.executeQuery();
				ttu.idu0080.order.server.Courier _return = new ttu.idu0080.order.server.Courier();
				while (rs.next()) {
					try {
						java.util.List<ttu.idu0080.order.server.EntAddress> _returnAddresses = new java.util.ArrayList<ttu.idu0080.order.server.EntAddress>();
						ttu.idu0080.order.server.EntAddress _returnAddressesVal1 = new ttu.idu0080.order.server.EntAddress();
						_returnAddressesVal1.setAddress(rs.getInt(1));
						_returnAddressesVal1.setCountry(rs.getString(2));
						_returnAddressesVal1.setCounty(rs.getString(3));
						_returnAddressesVal1.setStreetAddress(rs.getString(4));
						_returnAddressesVal1.setTownVillage(rs.getString(5));
						_returnAddressesVal1.setZipcode(rs.getString(6));
						_returnAddresses.add(_returnAddressesVal1);
						_return.getAddresses().addAll(_returnAddresses);
						_return.setEnterprise(rs.getInt(7));
						_return.setName(rs.getString(8));
						_return.setPercentFromOrder(rs.getInt(9));
					} catch (java.lang.Exception ex) {
						ex.printStackTrace();
						throw new RuntimeException(ex);
					}
				}
				return _return;

			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		} else {
			System.out.println("Failed to make connection!");
		}
		try {
			connection.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
    }

    /* (non-Javadoc)
     * @see ttu.idu0080.order.server.CourierService#getAllCouriers()*
     */
    public java.util.List<ttu.idu0080.order.server.Courier> getAllCouriers() {
		LOG.info("Executing operation getAllCouriers");
		try {
			Class.forName("org.postgresql.Driver");
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		Connection connection = null;
		try {
			connection = DriverManager.getConnection("jdbc:postgresql://localhost:5432/myDB", "postgres", "");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		if (connection != null) {
			System.out.println("You made it, take control your database now!");
			try {
				PreparedStatement st = connection.prepareStatement(
						"SELECT eaddr.ent_address, eaddr.country, eaddr.county, eaddr.street_address, eaddr.town_village,eaddr.zipcode, ent.enterprise, ent.name, ent.percent_from_order FROM ent_address eaddr, enterprise ent WHERE ent.enterprise=eaddr.subject_fk");
				ResultSet rs = st.executeQuery();
				java.util.List<ttu.idu0080.order.server.Courier> _return = new java.util.ArrayList<ttu.idu0080.order.server.Courier>();
				while (rs.next()) {
					try {
						ttu.idu0080.order.server.Courier _returnVal1 = new ttu.idu0080.order.server.Courier();
						java.util.List<ttu.idu0080.order.server.EntAddress> _returnVal1Addresses = new java.util.ArrayList<ttu.idu0080.order.server.EntAddress>();
						ttu.idu0080.order.server.EntAddress _returnVal1AddressesVal1 = new ttu.idu0080.order.server.EntAddress();
						_returnVal1AddressesVal1.setAddress(rs.getInt(1));
						_returnVal1AddressesVal1.setCountry(rs.getString(2));
						_returnVal1AddressesVal1.setCounty(rs.getString(3));
						_returnVal1AddressesVal1.setStreetAddress(rs.getString(4));
						_returnVal1AddressesVal1.setTownVillage(rs.getString(5));
						_returnVal1AddressesVal1.setZipcode(rs.getString(6));
						_returnVal1Addresses.add(_returnVal1AddressesVal1);
						_returnVal1.getAddresses().addAll(_returnVal1Addresses);
						_returnVal1.setEnterprise(rs.getInt(7));
						_returnVal1.setName(rs.getString(8));
						_returnVal1.setPercentFromOrder(rs.getInt(9));
						_return.add(_returnVal1);

					} catch (java.lang.Exception ex) {
						ex.printStackTrace();
						throw new RuntimeException(ex);
					}
				}
				return _return;

			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		} else {
			System.out.println("Failed to make connection!");
		}
		try {
			connection.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}

}
